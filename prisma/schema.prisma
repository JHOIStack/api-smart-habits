// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  name      String
  email     String   @unique
  age       Int
  region    String?
  createdAt DateTime @default(now())

  habits         UserHabit[]
  recommendations Recommendation[]
  interactions    Interaction[]
  profile         Profile?
}

model Habit {
  id          String      @id @default(uuid())
  name        String
  category    String
  description String

  users UserHabit[]
}

model UserHabit {
  id            String   @id @default(uuid())
  user          User     @relation(fields: [userId], references: [id])
  userId        String
  habit         Habit    @relation(fields: [habitId], references: [id])
  habitId       String
  status        String
  scheduledTime String
  completedAt   DateTime?
}

model Recommendation {
  id         String   @id @default(uuid())
  user       User     @relation(fields: [userId], references: [id])
  userId     String
  message    String
  createdAt  DateTime @default(now())
  shownTime  String
}

model Interaction {
  id        String   @id @default(uuid())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  type      String
  target    String
  timestamp DateTime @default(now())
}

model Profile {
  id          String   @id @default(uuid())
  user        User     @relation(fields: [userId], references: [id])
  userId      String   @unique
  profileType String
  assignedAt  DateTime @default(now())
}